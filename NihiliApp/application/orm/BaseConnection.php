<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Connection', 'default');

/**
 * BaseConnection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $connection_id
 * @property string $server
 * @property string $username
 * @property string $password
 * @property string $pathname
 * @property integer $protocol
 * @property Doctrine_Collection $ConnectionContent
 * @property Doctrine_Collection $UserConnection
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConnection extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('app_connection');
        $this->hasColumn('connection_id', 'integer', 8, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '8',
             ));
        $this->hasColumn('server', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('password', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('pathname', 'string', 512, array(
             'type' => 'string',
             'length' => '512',
             ));
        $this->hasColumn('protocol', 'integer', 5, array(
             'type' => 'integer',
             'length' => '5',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ConnectionContent', array(
             'local' => 'connection_id',
             'foreign' => 'fk_connection_id'));

        $this->hasMany('UserConnection', array(
             'local' => 'connection_id',
             'foreign' => 'fk_connection_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}