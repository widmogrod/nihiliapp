<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'default');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $username
 * @property string $password
 * @property string $email
 * @property Doctrine_Collection $UserGroup
 * @property Doctrine_Collection $UserConnection
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('app_user');
        $this->hasColumn('user_id', 'integer', 8, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '8',
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('password', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));


        $this->index('app_user_email_password_index', array(
             'fields' => 
             array(
              0 => 'email',
              1 => 'password',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('UserGroup', array(
             'local' => 'user_id',
             'foreign' => 'fk_user_id'));

        $this->hasMany('UserConnection', array(
             'local' => 'user_id',
             'foreign' => 'fk_user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}